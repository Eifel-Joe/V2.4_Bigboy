############### Config options ##################

[gcode_macro _bedfanvars]
variable_threshold: 100		# If bed temp target is above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
variable_innerfast: 0.4		# Fan speed once bed temp is reached
variable_outerfast: 0.5     
variable_innerslow: 0.2		# Fan speed while bed is heating
variable_outerslow: 0.2
variable_maxtemp: 60
variable_reducetemp: 55
variable_mintemp: 50
gcode:



########## Aliases #########

[gcode_macro BedFansSlow]
gcode:
	# Vars
	{% set INNERSLOW = printer["gcode_macro _bedfanvars"].innerslow|float %}
	{% set OUTERSLOW = printer["gcode_macro _bedfanvars"].outerslow|float %}
	
	SET_FAN_SPEED FAN=BedInner SPEED={INNERSLOW}
	SET_FAN_SPEED FAN=BedOuter SPEED={OUTERSLOW}

[gcode_macro BedFansFast]
gcode:
	# Vars
	{% set INNERFAST = printer["gcode_macro _bedfanvars"].innerfast|float %}
	{% set OUTERFAST = printer["gcode_macro _bedfanvars"].outerfast|float %}
	
	SET_FAN_SPEED FAN=BedInner SPEED={INNERFAST}
	SET_FAN_SPEED FAN=BedOuter SPEED={OUTERFAST}

[gcode_macro BedFansOff]
gcode:
	SET_FAN_SPEED FAN=BedInner SPEED=0
	SET_FAN_SPEED FAN=BedOuter SPEED=0

################ Monitoring loop #####################

# Turns bed fans to "fast" speed once target bed temp is reached.
[delayed_gcode bedfanloop]
gcode:
	# Vars
	{% set THRESHOLD = printer["gcode_macro _bedfanvars"].threshold|int %}
	
	{% if printer.heater_bed.target >= THRESHOLD %}								# Continue only if target temp greater than threshold.
		{% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
			BedFansFast															# If within 1 degree of target temp: Higher speed fans
		{% else %}
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5						# If temp not reached yet: loop again
		{% endif %}
	{% endif %}

[delayed_gcode prevent_overheat]
gcode:
    {% set THRESHOLD = printer["gcode_macro _bedfanvars"].threshold|int %}
    {% set MAXTEMP = printer["gcode_macro _bedfanvars"].maxtemp|int %}
    {% set REDUCETEMP = printer["gcode_macro _bedfanvars"].reducetemp|int %}
    {% set MINTEMP = printer["gcode_macro _bedfanvars"].mintemp|int %}

    {% if printer.idle_timeout.state == "Printing" and printer.heater_bed.temperature >= THRESHOLD %} 
      {% if printer["temperature_fan exhaust_fan"].temperature >= MAXTEMP %}
      BEDFANSOFF
      {% elif printer["temperature_fan exhaust_fan"].temperature >= REDUCETEMP and printer["temperature_fan exhaust_fan"].temperature < MAXTEMP %}
      BEDFANSSLOW
      {% elif printer["temperature_fan exhaust_fan"].temperature < MINTEMP %}
      BEDFANSFAST
      {% endif %}
    {% endif %}
    UPDATE_DELAYED_GCODE ID=prevent_overheat Duration=5

    
    